# Load libraries
# ------------------------------------------------------------------------------
library("tidyverse")
library("stats")
library("broom")
library("dplyr")
library("ggpubr")
# Define functions
# ------------------------------------------------------------------------------
source(file = "R/99_project_functions.R")
# Load data
# ------------------------------------------------------------------------------
data_set_1 <- read_tsv(file = "./data/03_aug_data_set_1.tsv")
data_set_2 <- read_tsv(file = "./data/03_aug_data_set_2.tsv")
data_set_3 <- read_tsv(file = "./data/03_aug_data_set_3.tsv")
data_set_4 <- read_tsv(file = "./data/03_aug_data_set_4.tsv")
# Encode the sequences
# encoded_data_set_1 <- data_set_1 %>%
#  pull(sequence) %>%
#  encode_peptide(m = "blosum62")
# encoded_data_set_2 <- data_set_2 %>%
#  pull(sequence) %>%
#  encode_peptide(m = "blosum62")
# encoded_data_set_3 <- data_set_3 %>%
#  pull(sequence) %>%
#  encode_peptide(m = "blosum62")
encoded_data_set_4 <- data_set_4 %>%
pull(sequence) %>%
encode_peptide(m = "blosum62")
# Creation of two group labels based on activity measurements to use as a colour option later in plots
# data_set_1 <- data_set_1 %>%
#  mutate(activity_group = case_when(score >= 1.5 ~ 'High activity',
#                                    score < 1.5 ~ 'Low activity'))
# data_set_2 <- data_set_2 %>%
#  mutate(activity_group = case_when(score >= 11 ~ 'High activity',
#                                    score < 11 ~ 'Low activity'))
# data_set_3 <- data_set_3 %>%
#  mutate(activity_group = case_when(score >= 0.975 ~ 'High activity',
#                                    score < 0.975 ~ 'Low activity'))
data_set_4 <- data_set_4 %>%
mutate(activity_group = case_when(
score >= 1.5 ~ "High activity",
score < 1.5 ~ "Low activity"
))
# PCA
# ------------------------------------------------------------------------------
# Compute PCA on encoded sequences -- zero centered values and unit variance
pca_1 <- encoded_data_set_1 %>%
prcomp(center = TRUE)
pca_2 <- encoded_data_set_2 %>%
prcomp(center = TRUE)
pca_4 <- encoded_data_set_4 %>%
prcomp(center = TRUE)
# Augment PCA
#aug_pca_1 <- pca_1 %>% augment(encoded_data_set_1)
#aug_pca_2 <- pca_2 %>% augment(encoded_data_set_2)
#aug_pca_3 <- pca_3 %>% augment(encoded_data_set_3)
aug_pca_4 <- pca_4 %>% augment(encoded_data_set_4)
# Augment PCA
#aug_pca_1 <- pca_1 %>% augment(encoded_data_set_1)
#aug_pca_2 <- pca_2 %>% augment(encoded_data_set_2)
#aug_pca_3 <- pca_3 %>% augment(encoded_data_set_3)
aug_pca_4 <- pca_4 %>% augment(data_set_4)
styler:::style_active_file()
# Data set 3
# ------------------------------------------------------------------------------
# Load data
# ------------------------------------------------------------------------------
data_set_3 <- read_tsv(file = "./data/03_aug_data_set_3.tsv")
ANN_keras_func(
name = "data_set_3",
df = data_set_3,
folderplot = "./results/06_ANN_plots/",
folderdata = "./results/06_ANN_data/",
epochs = 10,  # number of epochs
scale = "blosum62",
partitions = 0.30,
batch_size = 200,
learning_rate = 0.1
)
projection_plot_pca_4 <- aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
theme_classic() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
# Save projection plots from the PCA
# ------------------------------------------------------------------------------
# ggsave(plot = projection_plot_pca_1, "./results/05_PCA_plots/projection_plot_pca_1.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = projection_plot_pca_2, "./results/05_PCA_plots/projection_plot_pca_2.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = projection_plot_pca_3, "./results/05_PCA_plots/projection_plot_pca_3.png", width = 5.5, height = 5, dpi = 300)
ggsave(plot = projection_plot_pca_4, "./results/05_PCA_plots/projection_plot_pca_4.png", width = 5.5, height = 5, dpi = 300)
# PCA -Scree plot
scree_plot_pca_4 <- pca_4 %>%
tidy("pcs") %>%
ggplot() +
geom_line(aes(x = PC, y = percent, fill = PC)) +
ggtitle("Variance explained for the principal components") +
theme_classic() +
labs(x = "Principal components", y = "Variance percentage") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
# PCA -Scree plot
scree_plot_pca_4 <- pca_4 %>%
tidy("pcs") %>%
ggplot() +
geom_line(aes(x = PC, y = percent)) +
ggtitle("Variance explained for the principal components") +
theme_classic() +
labs(x = "Principal components", y = "Variance percentage") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
# Save scree plots
# ------------------------------------------------------------------------------
# ggsave(plot = scree_plot_pca_1, "./results/05_PCA_plots/scree_plot_pca_1.png", width = 6, height = 5, dpi = 300)
# ggsave(plot = scree_plot_pca_2, "./results/05_PCA_plots/scree_plot_pca_2.png", width = 6, height = 5, dpi = 300)
# ggsave(plot = scree_plot_pca_3, "./results/05_PCA_plots/scree_plot_pca_3.png", width = 6, height = 5, dpi = 300)
ggsave(plot = scree_plot_pca_4, "./results/05_PCA_plots/scree_plot_pca_4.png", width = 10, height = 4, dpi = 300)
#' PCA functions
#'
#'
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
PCbiplot(aug_pca_4,x="PC1", y="PC2")
aug_pca_4 %>%
ggplot(aes_string(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
geom_text(alpha=.4, size=3, aes(label=obsnames)) +
geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
View(aug_pca_4)
biplot_pca_4 <- aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
theme_classic() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot(aes_string(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
geom_text(alpha=.4, size=3, aes(label=obsnames)) +
geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
aug_pca_4 %>%
ggplot(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
geom_hline(aes(0), size=.2) +
geom_vline(aes(0), size=.2)
aug_pca_4 %>%
ggplot(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
geom_hline(aes(0), size=.2) +
geom_vline(aes(0), size=.2)
aug_pca_4 %>%
ggplot(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
# Save projection plots from the PCA
# ------------------------------------------------------------------------------
# ggsave(plot = biplot_pca_1, "./results/05_PCA_plots/biplot_pca_1.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = biplot_pca_2, "./results/05_PCA_plots/biplot_pca_2.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = biplot_pca_3, "./results/05_PCA_plots/biplot_pca_3.png", width = 5.5, height = 5, dpi = 300)
ggsave(plot = biplot_pca_4, "./results/05_PCA_plots/biplot_pca_4.png", width = 5.5, height = 5, dpi = 300)
aug_pca_4 %>%
ggplot(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group))
biplot_pca_4 <- aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
biplot_pca_4 <-
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
biplot_pca_4 <-
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2) +
theme_classic() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2) +
theme_classic() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2) +
theme_classic() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
#' PCA functions
#'
#'
biplot <- function(data) {
biplot <- data %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
theme_linedraw() +
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
return(biplot)
}
biplot(aug_pca_4)
#' PCA functions
#'
#'
biplot <- function(data, x=".fittedPC1", y=".fittedPC1") {
biplot <- data %>%
ggplot() +
geom_point(aes_string(x = x, y = y, colour = activity_group)) +
theme_linedraw() +
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
return(biplot)
}
#' PCA functions
#'
#'
biplot <- function(data, x=".fittedPC1", y=".fittedPC2") {
biplot <- data %>%
ggplot() +
geom_point(aes_string(x = x, y = y, colour = activity_group)) +
theme_linedraw() +
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
return(biplot)
}
biplot(aug_pca_4)
biplot_4 <- autoplot(aug_pca_4, data=data_set_4, colour="activity_group", loadings=TRUE, loadings.colour = "black", scale = 1)+
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
library(devtools)
install_github('fawda123/ggord')
library(ggord)
p <- ggord(pca_4, aug_pca_4$activity_group)
p
p <- ggord(pca_4, aug_pca_4$activity_group)
ggord(?)
ggord()
?ggord
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC3, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC4, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC3, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC5, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC21, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC21, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
biplot_pca_4 <- aug_pca_4 %>%
ggplot() +
geom_point(aes(x = .fittedPC1, y = .fittedPC2, colour = activity_group)) +
theme_linedraw() +
labs(x = "PC1", y = "PC2") +
ggtitle("Projection into the first two principal components") +
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 1),
legend.title = element_blank(),
axis.line = element_line(colour = "black", size = 0),
axis.text.x = element_text(face = "bold", color = "#000000"),
axis.text.y = element_text(face = "bold", color = "#000000")
)
# Save projection plots from the PCA
# ------------------------------------------------------------------------------
# ggsave(plot = biplot_pca_1, "./results/05_PCA_plots/biplot_pca_1.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = biplot_pca_2, "./results/05_PCA_plots/biplot_pca_2.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = biplot_pca_3, "./results/05_PCA_plots/biplot_pca_3.png", width = 5.5, height = 5, dpi = 300)
ggsave(plot = biplot_pca_4, "./results/05_PCA_plots/biplot_pca_4.png", width = 5.5, height = 5, dpi = 300)
# Save projection plots from the PCA
# ------------------------------------------------------------------------------
# ggsave(plot = biplot_pca_1, "./results/05_PCA_plots/biplot_pca_1.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = biplot_pca_2, "./results/05_PCA_plots/biplot_pca_2.png", width = 5.5, height = 5, dpi = 300)
# ggsave(plot = biplot_pca_3, "./results/05_PCA_plots/biplot_pca_3.png", width = 5.5, height = 5, dpi = 300)
ggsave(plot = biplot_pca_4, "./results/05_PCA_plots/biplot_pca_4.png", width = 6, height = 6, dpi = 300)
# Save projection plots from the PCA
# ------------------------------------------------------------------------------
# ggsave(plot = biplot_pca_1, "./results/05_PCA_plots/biplot_pca_1.png", width = 7, height = 6, dpi = 300)
# ggsave(plot = biplot_pca_2, "./results/05_PCA_plots/biplot_pca_2.png", width = 7, height = 6, dpi = 300)
# ggsave(plot = biplot_pca_3, "./results/05_PCA_plots/biplot_pca_3.png", width = 7, height = 6, dpi = 300)
ggsave(plot = biplot_pca_4, "./results/05_PCA_plots/biplot_pca_4.png", width = 7, height = 6, dpi = 300)
styler:::style_active_file()
# 00_do_it.R
# ------------------------------------------------------------------------------
# Install packages ONLY if needed
# ------------------------------------------------------------------------------
# install.packages("tidyverse")
# install.packages("ggplot2")
# install.packages("UniprotR")
# install.packages("devtools")
# install.packages('neuralnet')
# library("devtools")
# install_github("rstudio/keras")
#
# Would you like to install miniconda? Y
library(keras)
install_keras(tensorflow = "1.13.1")
# Run all scripts
# ------------------------------------------------------------------------------
source(file = "./R/01_load.R")
